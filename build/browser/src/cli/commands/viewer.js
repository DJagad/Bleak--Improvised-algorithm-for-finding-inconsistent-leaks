import * as express from 'express';
import { createServer } from 'http';
import { resolve, join, dirname } from 'path';
import { existsSync, readFileSync } from 'fs';
// Easiest way to get the folder of a Node module, wherever it may reside.
var DEVTOOLS_FRONTEND_DIR = dirname(require.resolve('chrome-devtools-frontend/package.json'));
function findPath() {
    var p = resolve(__dirname, '..');
    function checkForPackage() {
        var pkg = resolve(p, 'package.json');
        if (existsSync(pkg)) {
            try {
                return JSON.parse(readFileSync(pkg, 'utf8')).name === 'bleak-detector';
            }
            catch (e) {
                return false;
            }
        }
        return false;
    }
    var max = 5;
    while (!checkForPackage()) {
        --max;
        if (max <= 0) {
            throw new Error("Unable to locate proper directory for serving the viewer.");
        }
        p = resolve(p, '..');
    }
    return join(p, 'dist', 'viewer');
}
var Viewer = {
    command: 'viewer',
    describe: 'Runs an HTTP server hosting the BLeak results viewer',
    builder: {
        port: {
            type: 'number',
            default: 8889,
            describe: 'What port to run the HTTP server on.'
        }
    },
    handler: function (args) {
        var port = args.port;
        var app = express();
        app.use('/chrome-devtools-frontend', express.static(DEVTOOLS_FRONTEND_DIR));
        app.use(express.static(findPath()));
        createServer(app).listen(port, function () {
            console.log("Visit the viewer in your favorite web browser at http://localhost:" + port + "/ (CTRL+C to close)");
        });
    }
};
export default Viewer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlld2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NsaS9jb21tYW5kcy92aWV3ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxLQUFLLE9BQU8sTUFBTSxTQUFTLENBQUM7QUFDbkMsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUNsQyxPQUFPLEVBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDNUMsT0FBTyxFQUFDLFVBQVUsRUFBRSxZQUFZLEVBQUMsTUFBTSxJQUFJLENBQUM7QUFNNUMsMEVBQTBFO0FBQzFFLElBQU0scUJBQXFCLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsdUNBQXVDLENBQUMsQ0FBQyxDQUFDO0FBRWhHO0lBQ0UsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNqQztRQUNFLElBQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDdkMsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUM7Z0JBQ0gsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxnQkFBZ0IsQ0FBQztZQUN6RSxDQUFDO1lBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDWCxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2YsQ0FBQztRQUNILENBQUM7UUFDRCxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUNELElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztJQUNaLE9BQU8sQ0FBQyxlQUFlLEVBQUUsRUFBRSxDQUFDO1FBQzFCLEVBQUUsR0FBRyxDQUFDO1FBQ04sRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDYixNQUFNLElBQUksS0FBSyxDQUFDLDJEQUEyRCxDQUFDLENBQUE7UUFDOUUsQ0FBQztRQUNELENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7SUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQUVELElBQU0sTUFBTSxHQUFrQjtJQUM1QixPQUFPLEVBQUUsUUFBUTtJQUNqQixRQUFRLEVBQUUsc0RBQXNEO0lBQ2hFLE9BQU8sRUFBRTtRQUNQLElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxRQUFRO1lBQ2QsT0FBTyxFQUFFLElBQUk7WUFDYixRQUFRLEVBQUUsc0NBQXNDO1NBQ2pEO0tBQ0Y7SUFDRCxPQUFPLEVBQUUsVUFBQyxJQUFxQjtRQUM3QixJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3ZCLElBQU0sR0FBRyxHQUFHLE9BQU8sRUFBRSxDQUFDO1FBQ3RCLEdBQUcsQ0FBQyxHQUFHLENBQUMsMkJBQTJCLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUM7UUFDNUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNwQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRTtZQUM3QixPQUFPLENBQUMsR0FBRyxDQUFDLHVFQUFxRSxJQUFJLHdCQUFxQixDQUFDLENBQUM7UUFDOUcsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0YsQ0FBQztBQUVGLGVBQWUsTUFBTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21tYW5kTW9kdWxlfSBmcm9tICd5YXJncyc7XG5pbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtjcmVhdGVTZXJ2ZXJ9IGZyb20gJ2h0dHAnO1xuaW1wb3J0IHtyZXNvbHZlLCBqb2luLCBkaXJuYW1lfSBmcm9tICdwYXRoJztcbmltcG9ydCB7ZXhpc3RzU3luYywgcmVhZEZpbGVTeW5jfSBmcm9tICdmcyc7XG5cbmludGVyZmFjZSBDb21tYW5kTGluZUFyZ3Mge1xuICBwb3J0OiBudW1iZXI7XG59XG5cbi8vIEVhc2llc3Qgd2F5IHRvIGdldCB0aGUgZm9sZGVyIG9mIGEgTm9kZSBtb2R1bGUsIHdoZXJldmVyIGl0IG1heSByZXNpZGUuXG5jb25zdCBERVZUT09MU19GUk9OVEVORF9ESVIgPSBkaXJuYW1lKHJlcXVpcmUucmVzb2x2ZSgnY2hyb21lLWRldnRvb2xzLWZyb250ZW5kL3BhY2thZ2UuanNvbicpKTtcblxuZnVuY3Rpb24gZmluZFBhdGgoKTogc3RyaW5nIHtcbiAgbGV0IHAgPSByZXNvbHZlKF9fZGlybmFtZSwgJy4uJyk7XG4gIGZ1bmN0aW9uIGNoZWNrRm9yUGFja2FnZSgpIHtcbiAgICBjb25zdCBwa2cgPSByZXNvbHZlKHAsICdwYWNrYWdlLmpzb24nKTtcbiAgICBpZiAoZXhpc3RzU3luYyhwa2cpKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShyZWFkRmlsZVN5bmMocGtnLCAndXRmOCcpKS5uYW1lID09PSAnYmxlYWstZGV0ZWN0b3InO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBsZXQgbWF4ID0gNTtcbiAgd2hpbGUgKCFjaGVja0ZvclBhY2thZ2UoKSkge1xuICAgIC0tbWF4O1xuICAgIGlmIChtYXggPD0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmFibGUgdG8gbG9jYXRlIHByb3BlciBkaXJlY3RvcnkgZm9yIHNlcnZpbmcgdGhlIHZpZXdlci5gKVxuICAgIH1cbiAgICBwID0gcmVzb2x2ZShwLCAnLi4nKTtcbiAgfVxuICByZXR1cm4gam9pbihwLCAnZGlzdCcsICd2aWV3ZXInKTtcbn1cblxuY29uc3QgVmlld2VyOiBDb21tYW5kTW9kdWxlID0ge1xuICBjb21tYW5kOiAndmlld2VyJyxcbiAgZGVzY3JpYmU6ICdSdW5zIGFuIEhUVFAgc2VydmVyIGhvc3RpbmcgdGhlIEJMZWFrIHJlc3VsdHMgdmlld2VyJyxcbiAgYnVpbGRlcjoge1xuICAgIHBvcnQ6IHtcbiAgICAgIHR5cGU6ICdudW1iZXInLFxuICAgICAgZGVmYXVsdDogODg4OSxcbiAgICAgIGRlc2NyaWJlOiAnV2hhdCBwb3J0IHRvIHJ1biB0aGUgSFRUUCBzZXJ2ZXIgb24uJ1xuICAgIH1cbiAgfSxcbiAgaGFuZGxlcjogKGFyZ3M6IENvbW1hbmRMaW5lQXJncykgPT4ge1xuICAgIGNvbnN0IHBvcnQgPSBhcmdzLnBvcnQ7XG4gICAgY29uc3QgYXBwID0gZXhwcmVzcygpO1xuICAgIGFwcC51c2UoJy9jaHJvbWUtZGV2dG9vbHMtZnJvbnRlbmQnLCBleHByZXNzLnN0YXRpYyhERVZUT09MU19GUk9OVEVORF9ESVIpKTtcbiAgICBhcHAudXNlKGV4cHJlc3Muc3RhdGljKGZpbmRQYXRoKCkpKTtcbiAgICBjcmVhdGVTZXJ2ZXIoYXBwKS5saXN0ZW4ocG9ydCwgZnVuY3Rpb24oKSB7XG4gICAgICBjb25zb2xlLmxvZyhgVmlzaXQgdGhlIHZpZXdlciBpbiB5b3VyIGZhdm9yaXRlIHdlYiBicm93c2VyIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fS8gKENUUkwrQyB0byBjbG9zZSlgKTtcbiAgICB9KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgVmlld2VyO1xuIl19